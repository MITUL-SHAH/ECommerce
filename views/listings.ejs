<!DOCTYPE html>
<html>

<head>
    <meta charset="ISO-8859-1">
    <title>Seller Listing Page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.25/css/dataTables.bootsthap5.css"> -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="../public/landing_page/app/scss/style.css">
    <!-- Make sure to include this at the end of your body tag -->
    <script type="text/javascript">
        // Wait for the DOM to be ready
        // $(document).ready(function () {
            // Event listener for 'Add to Cart' button clicks
            // $('.add-to-cart-btn').click(function (event) {
            $(document).on('click', '.add-to-cart-btn', function(event) {
                // Prevent the default form submit action
                event.preventDefault();

                console.log($(this).data('item-id'));
                // Get the item details from the data attributes
                var listingId = $(this).data('item-id');
                var itemName = $(this).data('item-name');
                var itemPrice = $(this).data('item-price');
                var itemCategory = $(this).data('item-category');
                console.log(listingId, itemName, itemPrice, itemCategory);

                // Create an object with the item details
                var itemData = {
                    listingId: listingId,
                    name: itemName,
                    price: itemPrice,
                    category: itemCategory
                };

                // Make the AJAX request to the API
                $.ajax({
                    type: 'POST',
                    url: '/cart/add-itemlisting', // Replace with your actual API endpoint
                    data: itemData,
                    success: function(response) {
                        // Handle success - perhaps confirm to the user that the item was added
                        alert('Item added to cart!');
                    },
                    error: function(error) {
                        // Handle error - perhaps notify the user that an error occurred
                        alert('Error adding item to cart.');
                    }
                });
            });
        // });
    </script>
    
    <!-- <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:wght@300;400&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="../public/landing_page/app/scss/style.css">
    <style>
        .attribution { font-size: 11px; text-align: center; }
        .attribution a { color: hsl(228, 45%, 44%); }
    </style> -->
</head>

<body>
    <%- include('Common/header2.ejs') %>
    <br><br><br>
    <h1 class="text-center mx-auto">Scarlet Electronics</h1>
    <br><br><br>
    <div class="container">
        <div class="row">
            <div class="col-md-2">
                <form>
                    <div class="form-row">
                        <div class="form-group col-md-10">
                            <label for="price">Price:</label>
                            <select class="form-control" id="price">
                                <option value="">Any</option>
                                <option value="under-100">Under $100</option>
                                <option value="100-500">$100 - $500</option>
                                <option value="500-1000">$500 - $1000</option>
                                <option value="1000-2000">$1000 - $2000</option>
                                <option value="above-2000">$2000 Above</option>
                            </select>
                        </div>
                        <div class="form-group col-md-10">
                            <label for="category">Category:</label>
                            <select class="form-control" id="category">
                                <option value="">Any</option>
                                <option value="laptops">Laptops</option>
                                <option value="smartphones">Smartphones</option>
                                <option value="television">Television</option>
                                <option value="accessories">Accessories</option>
                            </select>
                        </div>
                        <div class="form-group col-md-10">
                            <label for="storage">Storage:</label>
                            <select class="form-control" id="storage">
                                <option value="">Any</option>
                                <option value="32gb">32GB</option>
                                <option value="64gb">64GB</option>
                                <option value="128gb">128GB</option>
                                <!-- Add more storage options as needed -->
                            </select>
                        </div>
                        <!-- Add more filter criteria dropdowns as needed -->
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <button type="submit" class="btn btn-primary">Apply Filters</button>
                        </div>
                    </div>
                </form>
            </div>

            <div class="col-md-10" id="cont1">
                <div class="row" id="listings-div">
                    
                </div>
            </div>

        </div>
    </div>

    <div class="container">
        <div class="d-flex justify-content-end">
            <form action="/cart/fetch-cart-display" method="GET">
                <button type="submit" class="btn btn-primary">Cart</button>
            </form>
        </div>
    </div>

    <div class="container">
        <div class="d-flex align-items-end">
            <form action="/item-listing/create" method="GET">
                <button type="submit" class="btn btn-primary login-check-element">Sell Item</button>
            </form>
        </div>
    </div>
    

    <script>
        function fetchItemListings() {
            $.ajax({
                type: "GET",
                url: "/item-listing",
                success: function(response) {
                    var divParent = $('#listings-div');
                    divParent.empty(); // Clear existing content in the parent div

                    response.serializedListings.forEach(function(item) {
                        // Create a new card for each item in serializedListings
                        var cardHtml = `
                                <div class="col-md-4">
                                    <div class="card card-listings-page">
                                        <div class="image-container">
                                            <img src="https://drive.google.com/uc?export=view&id=${item.imageFiles[0].id}" class="img_contain" alt="Image Unavailable">
                                        </div>
                                        <div class="card-body">
                                            <h5 class="card-title">${item.name}</h5>
                                            <h6 class="card-text">From Price: $${item.price}</h6>
                                            <h7 class="card-subtitle mb-2 text-muted">${item.category}</h7>
                                            <p class="card-text card-text-description">${item.description}</p>
                                            <a href="/item-listing/catalog?item-id=${item.itemId}" class="btn btn-primary"
                                                data-item-id="${item.listingId}">
                                                View Details
                                            </a>
                                            <a href="#" class="btn btn-secondary add-to-cart-btn login-check-element"   
                                                data-item-id="${item.listingId}"
                                                data-item-name="${item.name}"
                                                data-item-price="${item.price}"
                                                data-item-category="${item.category}">
                                                Add to Cart
                                            </a>
                                        </div>
                                    </div>
                                </div>`;
                            divParent.append(cardHtml); // Append the new card to the parent div
                    });
                    checkElementsWithLoginRequirement();
                },
                error: function(error) {
                    console.error('Error fetching claimed requests:', error);
                }
            });
        }

        function checkElementsWithLoginRequirement() {
            console.log("Checking for button disabling!");
            var xhr = new XMLHttpRequest();
            xhr.open("GET", "/users/", true);
            xhr.onreadystatechange = function() {
                if (xhr.readyState === 4) {
                    if (xhr.status !== 200) {
                            console.log("Not logged in check for the button disabling");
                            disableButtons();
                        }
                    } else {
                        console.error('Unable to check if the user is logged in. Error:', xhr.status, xhr.statusText);
                    }
                }
            xhr.send();
            function disableButtons() {
                var elementsToDisable = document.querySelectorAll('.login-check-element');
                elementsToDisable.forEach(function(element) {
                    element.disabled = true;
                });
            }
        }

        $(document).ready(function() {
        
            fetchItemListings();

            // checkElementsWithLoginRequirement();

        });
    </script>

</body>


</html>