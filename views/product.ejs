<!DOCTYPE html>
<html>

<head>
    <meta charset="ISO-8859-1">
    <title>Seller Listing Page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js" type="text/javascript"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:wght@300;400&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="../public/landing_page/app/scss/style.css">
    <style>
        .attribution { font-size: 11px; text-align: center; }
        .attribution a { color: hsl(228, 45%, 44%); }
    </style>
</head>

<body>
    <%- include('Common/header2.ejs') %>

    <div class="container mt-5" id="product-div-main">
        <h2 class="text-danger text-center" id="product-name-header"><!-- product.name %>--></h2>

        <div class="row mt-5" id="product-div-details">
            <div class="col-md-4" id="product-image-div">
                <img src="https://drive.google.com/uc?export=view&id=" style='height: 100%; width: 100%; object-fit: contain' alt="Image Unavailable">

            </div>

            <div class="col-md-8" id="product-div-2">
                <div class="row mb-3" id="product-div-rating">
                    <span class="star-rating">
                            &#9733; <!-- Unicode star character -->
                    </span>
                </div>
                <div class="row mb-3" id="product-div-description">
                    <p><!--= product.description %>--></p>
                </div>

                <div class="row" id="product-div-listings">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Price</th>
                                <th scope="col">Quantity</th>
                                <th scope="col">Add to Cart</th>
                            </tr>
                        </thead>
                        <tbody id="product-div-listings-list">
                            <!-- product.ItemListings.forEach((item) => { %>-->
                                <tr>
                                    <td> item.price %></td>
                                    <td> item.quantity %></td>
                                    <td>
                                        <input type="radio" name="listingId"
                                            data-listing-id="= item.listingId %>"
                                            data-item-name="= product.name %>"
                                            data-item-price="= item.price %>"
                                            data-item-category="= product.category %>">
                                    </td>
                                </tr>
                            <!-- }) %>-->
                        </tbody>
                    </table>
                </div>
                <button class="btn btn-primary add-to-cart-btn">Add Selected Item to Cart</button>
            </div>
        </div>

        <br><br><br><br>

        <div class="mt-5">
            <h2>Reviews</h2>
            <br>
            <div>
                Review section
            </div>
        </div>
    </div>



    <script>
        // Function to retrieve URL parameters by name
        function getParameterByName(name, url) {
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        }
    
        // Function to make the AJAX call and update HTML content
        function fetchItemDetails() {
            var itemId = getParameterByName('item-id');
    
            if (!itemId) {
                console.error('Item ID not found in the URL parameters.');
                return;
            }
            console.log('Item ID found : '+itemId);
            // Make AJAX call
            $.ajax({
                url: '/item-listing/product?item-id=' + itemId,
                type: 'GET',
                success: function (response) {
                    if (response.success) {
                        updateProductDetails(response.product, response.imageFiles);
                    } else {
                        console.error('Failed to retrieve item information.');
                    }
                },
                error: function () {
                    console.error('Failed to make the AJAX call.');
                }
            });
        }
    
        // Function to update HTML content with received data
        function updateProductDetails(product, imageFiles) {
            // Update product name
            var productNameHeader = document.querySelector('#product-name-header');
            productNameHeader.innerHTML = product.name;
    
            // Update product image
            var productImage = document.querySelector('#product-image-div img');
            productImage.src = 'https://drive.google.com/uc?export=view&id=' + imageFiles[0].id;
    
            // Update other product details
            var productDiv2 = document.querySelector('#product-div-2');
            productDiv2.querySelector('#product-div-rating .star-rating').innerHTML = '&#9733;&#9733;&#9733;&#9733;&#9733;';
            productDiv2.querySelector('#product-div-description p').innerHTML = product.description;
    
            // Update table with item listings
            var tableBody = productDiv2.querySelector('#product-div-listings-list');
            tableBody.innerHTML = ''; // Clear existing rows
    
            product.ItemListings.forEach(function (item) {
                var row = tableBody.insertRow();
                var cell1 = row.insertCell(0);
                var cell2 = row.insertCell(1);
                var cell3 = row.insertCell(2);
    
                cell1.innerHTML = item.price;
                cell2.innerHTML = item.quantity;
    
                // Create radio button and attach data attributes
                var radioBtn = document.createElement('input');
                radioBtn.type = 'radio';
                radioBtn.name = 'listingId';
                radioBtn.dataset.listingId = item.listingId;
                radioBtn.dataset.itemName = product.name;
                radioBtn.dataset.itemPrice = item.price;
                radioBtn.dataset.itemCategory = product.category;
    
                cell3.appendChild(radioBtn);
            });
    
        }
    
        // Call the function to fetch item details on page load
        fetchItemDetails();
    </script>

<script type="text/javascript">
    // Wait for the DOM to be ready
    $(document).ready(function () {
        // Event listener for 'Add to Cart' button clicks
        $('.add-to-cart-btn').click(function (event) {
            // Prevent the default form submit action
            event.preventDefault();

            var selectedRadio = $("input[name='listingId']:checked");

        if (selectedRadio.length > 0) {
            var listingId = selectedRadio.data("listing-id");
            var itemName = selectedRadio.data("item-name");
            var itemPrice = selectedRadio.data("item-price");
            var itemCategory = selectedRadio.data("item-category");

            console.log("Listing ID: " + listingId);
            console.log("Item Name: " + itemName);
            console.log("Item Price: " + itemPrice);
            console.log("Item Category: " + itemCategory);
            // console.log($(this).data('item-id'));
            // var listingId = $(this).data('item-id');
            // var itemName = $(this).data('item-name');
            // var itemPrice = $(this).data('item-price');
            // var itemCategory = $(this).data('item-category');
            // console.log(listingId, itemName, itemPrice, itemCategory);

            // Create an object with the item details
            var itemData = {
                listingId: listingId,
                name: itemName,
                price: itemPrice,
                category: itemCategory
            };

            // Make the AJAX request to the API
            $.ajax({
                type: 'POST',
                url: '/cart/add-itemlisting', // Replace with your actual API endpoint
                data: itemData,
                success: function(response) {
                    // Handle success - perhaps confirm to the user that the item was added
                    alert('Item added to cart!');
                },
                error: function(error) {
                    // Handle error - perhaps notify the user that an error occurred
                    alert('Error adding item to cart.');
                }
            });

        } else {
            alert("Please select an item before adding to cart.");
        }

            
        });
    });
</script>
    
</body>


</html>