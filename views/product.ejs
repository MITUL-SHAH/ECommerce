<!DOCTYPE html>
<html>
	<head>
		<meta charset="ISO-8859-1" />
		<title>Seller Listing Page</title>
		<link
			href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css"
			rel="stylesheet" />
		<script
			src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"
			type="text/javascript"></script>
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Public+Sans:wght@300;400&display=swap"
			rel="stylesheet" />

		<link
			rel="stylesheet"
			href="../public/landing_page/app/scss/style.css" />
		<style>
			.attribution {
				font-size: 11px;
				text-align: center;
			}
			.attribution a {
				color: hsl(228, 45%, 44%);
			}
			.column1 {
				max-width: 20px; /* Adjust the max-width as needed */
				max-height: 20px;
				overflow: hidden;
				text-overflow: ellipsis;
				white-space: nowrap;
			}
			.column2 {
				max-width: 150px; /* Adjust the max-width as needed */
				max-height: 20px;
				overflow: hidden;
				text-overflow: ellipsis;
				white-space: nowrap;
			}
			.column3 {
				max-width: 40px; /* Adjust the max-width as needed */
				max-height: 20px;
				overflow: hidden;
				text-overflow: ellipsis;
				white-space: nowrap;
			}
		</style>
	</head>

	<body>
		<%- include('Common/header2.ejs') %>

		<div class="container mt-5" id="product-div-main">
			<h2 class="text-danger text-center" id="product-name-header">
				<!-- product.name %>-->
			</h2>

			<div class="row mt-5" id="product-div-details">
				<div class="col-md-4" id="product-image-div">
					<img
						src="https://drive.google.com/uc?export=view&id="
						style="height: 100%; width: 100%; object-fit: contain"
						alt="Image Unavailable" />
				</div>

				<div class="col-md-8" id="product-div-2">
					<div class="row mb-3" id="product-div-rating">
						<span class="star-rating">
							&#9733;
							<!-- Unicode star character -->
						</span>
					</div>
					<div class="row mb-3" id="product-div-description">
						<p><!--= product.description %>--></p>
					</div>

					<div class="row" id="product-div-listings">
						<table class="table">
							<thead>
								<tr>
									<th scope="col">Price</th>
									<th scope="col">Quantity</th>
									<th scope="col">Add to Cart</th>
								</tr>
							</thead>
							<tbody id="product-div-listings-list">
								<!-- product.ItemListings.forEach((item) => { %>-->
								<tr></tr>
								<!-- }) %>-->
							</tbody>
						</table>
					</div>
					<button class="btn btn-primary add-to-cart-btn">
						Add Selected Item to Cart
					</button>
				</div>
			</div>

			<br /><br /><br /><br />

			<div class="mt-5">
				<h2>Reviews</h2>
				<br />
				<div id="item-review" name="item-review">
					<table class="table">
						<thead>
							<tr>
								<th>Username</th>
								<th>Comment</th>
								<th>Rating</th>
							</tr>
						</thead>
						<tbody id="item-review-table">
							<tr></tr>
						</tbody>
					</table>
				</div>
				<br /><br /><br /><br />
				<div class="col-md-3 align-self-center mx-auto">
					<label for="commentbox" class="form-label text-left"
						>Your Review
					</label>
					<div id="item-review-box" name="item-review-box">
						<input
							type="text"
							class="form-control text-left"
							id="item-review-input"
							name="item-review-input"
							required />
					</div>
					<div id="rating-box" name="rating-box">
						<select
							class="form-control text-left"
							id="rating"
							name="rating"
							required>
							<option value="">Select a rating</option>
							<option value="1">1</option>
							<option value="2">2</option>
							<option value="3">3</option>
							<option value="4">4</option>
							<option value="5">5</option>
						</select>
					</div>

					<option></option>
				</div>
				<div class="col-md-3 text-center mx-auto">
					<button
						type="submit"
						id="edit_button"
						class="btn btn-primary align-self-center">
						Edit
					</button>
					<button
						type="submit"
						id="delete_button"
						class="btn btn-primary align-self-center">
						Delete
					</button>
				</div>
			</div>

			<div class="mt-5">
				<h2>Recommendations</h2>
				<br />
				<div id="recommendations" name="recommendations">
					<table class="table">
						<thead>
							<tr>
								<th>Item Name</th>
								<th>Item Description</th>
								<th>Link</th>
							</tr>
						</thead>
						<tbody id="recommendations-table">
							<tr></tr>
						</tbody>
					</table>
				</div>
			</div>
		</div>

		<script>
			// Function to retrieve URL parameters by name
			function getParameterByName(name, url) {
				if (!url) url = window.location.href;
				name = name.replace(/[\[\]]/g, "\\$&");
				var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
					results = regex.exec(url);
				if (!results) return null;
				if (!results[2]) return "";
				return decodeURIComponent(results[2].replace(/\+/g, " "));
			}

			// Function to make the AJAX call and update HTML content
			function fetchItemDetails() {
				var itemId = getParameterByName("item-id");

				if (!itemId) {
					console.error("Item ID not found in the URL parameters.");
					return;
				}
				console.log("Item ID found : " + itemId);
				// Make AJAX call
				$.ajax({
					url: "/item-listing/product?item-id=" + itemId,
					type: "GET",
					success: function (response) {
						if (response.success) {
							updateProductDetails(
								response.product,
								response.imageFiles
							);
						} else {
							console.error(
								"Failed to retrieve item information."
							);
						}
					},
					error: function () {
						console.error("Failed to make the AJAX call.");
					},
				});
			}

			// Function to update HTML content with received data
			function updateProductDetails(product, imageFiles) {
				// Update product name
				var productNameHeader = document.querySelector(
					"#product-name-header"
				);
				productNameHeader.innerHTML = product.name;

				// Update product image
				var productImage = document.querySelector(
					"#product-image-div img"
				);
				productImage.src =
					"https://drive.google.com/uc?export=view&id=" +
					imageFiles[0].id;

				// Update other product details
				var productDiv2 = document.querySelector("#product-div-2");
				productDiv2.querySelector(
					"#product-div-rating .star-rating"
				).innerHTML = "&#9733;&#9733;&#9733;&#9733;&#9733;";
				productDiv2.querySelector(
					"#product-div-description p"
				).innerHTML = product.description;

				// Update table with item listings
				var tableBody = productDiv2.querySelector(
					"#product-div-listings-list"
				);
				tableBody.innerHTML = ""; // Clear existing rows

				product.ItemListings.forEach(function (item) {
					var row = tableBody.insertRow();
					var cell1 = row.insertCell(0);
					var cell2 = row.insertCell(1);
					var cell3 = row.insertCell(2);

					cell1.innerHTML = item.price;
					cell2.innerHTML = item.quantity;

					// Create radio button and attach data attributes
					var radioBtn = document.createElement("input");
					radioBtn.type = "radio";
					radioBtn.name = "listingId";
					radioBtn.dataset.listingId = item.listingId;
					radioBtn.dataset.itemName = product.name;
					radioBtn.dataset.itemPrice = item.price;
					radioBtn.dataset.itemCategory = product.category;

					cell3.appendChild(radioBtn);
				});
			}

			function displayReviews(comments) {
				const ind_comment = comments.ind_comment;
				comments = comments.comments;
				// Update other product details
				var itemReviewDiv = document.querySelector("#item-review");

				// Update table with item listings
				var itemReviewTable =
					itemReviewDiv.querySelector("#item-review-table");
				itemReviewTable.innerHTML = ""; // Clear existing rows

				comments.forEach(function (comment) {
					var row = itemReviewTable.insertRow();
					var cell1 = row.insertCell(0);
					var cell2 = row.insertCell(1);
					var cell3 = row.insertCell(2);
					let whiteStar = "<span>&#x2606;</span>";
					whiteStar = whiteStar.repeat(5 - comment.rating);
					let blackStar = "<span>&#x2605;</span>";
					blackStar = blackStar.repeat(comment.rating);

					cell1.innerHTML = comment.username;
					cell2.innerHTML = comment.comment;
					cell3.innerHTML =
						'<div class="rating-stars">' +
						blackStar +
						whiteStar +
						"</div>";
				});
				var itemReviewEdit = document.querySelector("#edit_button");
				var itemReviewDelete = document.querySelector("#delete_button");

				itemReviewEdit.innerHTML = "Submit";
				itemReviewDelete.innerHTML = "Cancel";

				if (ind_comment.review_id) {
					var itemReviewBox =
						document.querySelector("#item-review-box");
					itemReviewBox.innerHTML =
						'<p id="item-review-comment">' +
						ind_comment.comment +
						"</p>";

					let whiteStar = "<span>&#x2606;</span>";
					whiteStar = whiteStar.repeat(5 - ind_comment.rating);
					let blackStar = "<span>&#x2605;</span>";
					blackStar = blackStar.repeat(ind_comment.rating);

					var ratingBox = document.querySelector("#rating-box");
					ratingBox.innerHTML =
						'<div class="rating-stars" id="rating" name="rating">' +
						blackStar +
						whiteStar +
						"</div>";

					window.ind_comment = ind_comment;

					itemReviewEdit.innerHTML = "Edit";
					itemReviewDelete.innerHTML = "Delete";
				}
			}

			function getComments() {
				let comments = [];
				const itemId = getParameterByName("item-id");

				if (!itemId) {
					console.error("Item ID not found in the URL parameters.");
					return;
				}
				console.log("Item ID found : " + itemId);
				// Make AJAX call
				$.ajax({
					url: "/review/?itemId=" + itemId,
					type: "GET",
					success: function (response) {
						if (response.success) {
							displayReviews(response.body);
						} else {
							console.error(
								"Failed to retrieve item information."
							);
						}
					},
					error: function () {
						console.error("Failed to make the AJAX call.");
					},
				});
			}

			function displayReviews(comments) {
				const ind_comment = comments.ind_comment;
				comments = comments.comments;
				// Update other product details
				var itemReviewDiv = document.querySelector("#item-review");

				// Update table with item listings
				var itemReviewTable =
					itemReviewDiv.querySelector("#item-review-table");
				itemReviewTable.innerHTML = ""; // Clear existing rows

				comments.forEach(function (comment) {
					var row = itemReviewTable.insertRow();
					var cell1 = row.insertCell(0);
					var cell2 = row.insertCell(1);
					var cell3 = row.insertCell(2);
					let whiteStar = "<span>&#x2606;</span>";
					whiteStar = whiteStar.repeat(5 - comment.rating);
					let blackStar = "<span>&#x2605;</span>";
					blackStar = blackStar.repeat(comment.rating);

					cell1.innerHTML = comment.username;
					cell2.innerHTML = comment.comment;
					cell3.innerHTML =
						'<div class="rating-stars">' +
						blackStar +
						whiteStar +
						"</div>";
				});
				var itemReviewEdit = document.querySelector("#edit_button");
				var itemReviewDelete = document.querySelector("#delete_button");

				itemReviewEdit.innerHTML = "Submit";
				itemReviewDelete.innerHTML = "Cancel";

				if (ind_comment.review_id) {
					var itemReviewBox =
						document.querySelector("#item-review-box");
					itemReviewBox.innerHTML =
						'<p id="item-review-comment">' +
						ind_comment.comment +
						"</p>";

					let whiteStar = "<span>&#x2606;</span>";
					whiteStar = whiteStar.repeat(5 - ind_comment.rating);
					let blackStar = "<span>&#x2605;</span>";
					blackStar = blackStar.repeat(ind_comment.rating);

					var ratingBox = document.querySelector("#rating-box");
					ratingBox.innerHTML =
						'<div class="rating-stars" id="rating" name="rating">' +
						blackStar +
						whiteStar +
						"</div>";

					window.ind_comment = ind_comment;

					itemReviewEdit.innerHTML = "Edit";
					itemReviewDelete.innerHTML = "Delete";
				}
			}

			function displayRecommendations(items) {
				// Update other product details
				var recommendationsDiv =
					document.querySelector("#recommendations");

				// Update table with item listings
				var recommendationsTable = recommendationsDiv.querySelector(
					"#recommendations-table"
				);
				recommendationsTable.innerHTML = ""; // Clear existing rows

				items.forEach(function (item) {
					var row = recommendationsTable.insertRow();
					var cell1 = row.insertCell(0);
					var cell2 = row.insertCell(1);
					var cell3 = row.insertCell(2);

					cell1.className = "column1";
					cell2.className = "column2";
					cell3.className = "column3";

					console.log(cell1.className);

					cell1.innerHTML = item.name;
					cell2.innerHTML = item.description;
					cell3.innerHTML =
						'<a href="' + item.link + '" target="_blank">Link</a>';
				});
			}

			function getRecommendations() {
				let comments = [];
				const itemId = getParameterByName("item-id");

				if (!itemId) {
					console.error("Item ID not found in the URL parameters.");
					return;
				}
				console.log("Item ID found : " + itemId);
				// Make AJAX call
				$.ajax({
					url: "/recommendations/?itemId=" + itemId,
					type: "GET",
					success: function (response) {
						if (response.success) {
							console.log(response.body.items);
							displayRecommendations(response.body.items);
						} else {
							console.error(
								"Failed to retrieve item information."
							);
						}
					},
					error: function () {
						console.error("Failed to make the AJAX call.");
					},
				});
			}

			// Call the function to fetch item details on page load
			fetchItemDetails();
			getComments();
			getRecommendations();
		</script>

		<script type="text/javascript">
			// Wait for the DOM to be ready
			$(document).ready(function () {
				// Event listener for 'Add to Cart' button clicks
				$(".add-to-cart-btn").click(function (event) {
					// Prevent the default form submit action
					event.preventDefault();

					var selectedRadio = $("input[name='listingId']:checked");

					if (selectedRadio.length > 0) {
						var listingId = selectedRadio.data("listing-id");
						var itemName = selectedRadio.data("item-name");
						var itemPrice = selectedRadio.data("item-price");
						var itemCategory = selectedRadio.data("item-category");

						console.log("Listing ID: " + listingId);
						console.log("Item Name: " + itemName);
						console.log("Item Price: " + itemPrice);
						console.log("Item Category: " + itemCategory);
						// console.log($(this).data('item-id'));
						// var listingId = $(this).data('item-id');
						// var itemName = $(this).data('item-name');
						// var itemPrice = $(this).data('item-price');
						// var itemCategory = $(this).data('item-category');
						// console.log(listingId, itemName, itemPrice, itemCategory);

						// Create an object with the item details
						var itemData = {
							listingId: listingId,
							name: itemName,
							price: itemPrice,
							category: itemCategory,
						};

						// Make the AJAX request to the API
						$.ajax({
							type: "POST",
							url: "/cart/add-itemlisting", // Replace with your actual API endpoint
							data: itemData,
							success: function (response) {
								// Handle success - perhaps confirm to the user that the item was added
								alert("Item added to cart!");
							},
							error: function (error) {
								// Handle error - perhaps notify the user that an error occurred
								alert("Error adding item to cart.");
							},
						});
					} else {
						alert("Please select an item before adding to cart.");
					}
				});
				$("#edit_button").click(function (event) {
					event.preventDefault();
					const buttonText = $(this).text();
					var itemId = getParameterByName("item-id");

					if (buttonText === "Submit") {
						var itemReviewBox =
							document.querySelector("#item-review-box");
						var ratingBox = document.querySelector("#rating-box");
						const rating = ratingBox.querySelector(
							"#rating option:checked"
						).innerHTML;
						const comment =
							document.querySelector("#item-review-input").value;

						if (comment.length == 0) {
							alert("Empty box");
						} else if (rating === "Select a rating") {
							alert("Please select a rating");
						} else {
							$.ajax({
								type: "POST",
								url: "/review",
								data: {
									itemId: itemId,
									rating: rating,
									comments: comment,
								},
								success: function (response) {
									if (response.success) {
										$("#edit_button").text("Edit");
										$("#delete_button").text("Delete");
										let blackStar = "<span>&#x2605;</span>";
										blackStar = blackStar.repeat(rating);
										let whiteStar = "<span>&#x2606;</span>";
										whiteStar = whiteStar.repeat(
											5 - rating
										);
										itemReviewBox.innerHTML =
											'<p id="item-review-comment">' +
											comment +
											"</p>";
										ratingBox.innerHTML =
											'<div class="rating-stars" id="rating" name="rating">' +
											blackStar +
											whiteStar +
											"</div>";
										window.ind_comment = {
											review_id: response.reviewId,
											rating: rating,
											comment: comment,
										};
									}
								},
								error: function (error) {
									// Handle error - perhaps notify the user that an error occurred
									if (
										Object.keys(
											error.responseJSON
										).includes("redirectUrl")
									) {
										window.location.href =
											error.responseJSON.redirectUrl;
									}
									alert(error.responseJSON.message);
								},
							});
						}
					} else {
						var itemReviewBox =
							document.querySelector("#item-review-box");
						var ratingBox = document.querySelector("#rating-box");

						console.log(
							document.querySelector("#rating").innerHTML
						);

						$("#edit_button").text("Submit");
						$("#delete_button").text("Cancel");
						const comment = document.querySelector(
							"#item-review-comment"
						).textContent;
						itemReviewBox.innerHTML =
							'<input type="text" class="form-control text-left" ' +
							'id="item-review-input" name="item-review-input" value="' +
							comment +
							'"required />';
						ratingBox.innerHTML =
							'<select class="form-control text-left" id="rating" name="rating" required>\n' +
							'<option value="">Select a rating</option>\n' +
							'<option value="1">1</option>\n' +
							'<option value="2">2</option>\n' +
							'<option value="3">3</option>\n' +
							'<option value="4">4</option>\n' +
							'<option value="5">5</option>' +
							"</select>";
					}
				});
				$("#delete_button").click(function (event) {
					event.preventDefault();
					const buttonText = $(this).text();
					const ind_comment = window.ind_comment;

					if (buttonText === "Delete") {
						$.ajax({
							type: "DELETE",
							url: "/review?reviewId=" + ind_comment.review_id,
							success: function (response) {
								console.log(response);
							},
							error: function (error) {
								if (
									Object.keys(error.responseJSON).includes(
										"redirectUrl"
									)
								) {
									window.location.href =
										error.responseJSON.redirectUrl;
								}
								console.log("Redirect");
								alert(error.responseJSON.message);
							},
						});
						var itemReviewBox =
							document.querySelector("#item-review-box");
						var ratingBox = document.querySelector("#rating-box");

						$("#edit_button").text("Submit");
						$("#delete_button").text("Cancel");
						const comment = "";
						itemReviewBox.innerHTML =
							'<input type="text" class="form-control text-left" ' +
							'id="item-review-input" name="item-review-input" value="' +
							comment +
							'"required />';
						ratingBox.innerHTML =
							'<select class="form-control text-left" id="rating" name="rating" required>\n' +
							'<option value="">Select a rating</option>\n' +
							'<option value="1">1</option>\n' +
							'<option value="2">2</option>\n' +
							'<option value="3">3</option>\n' +
							'<option value="4">4</option>\n' +
							'<option value="5">5</option>' +
							"</select>";
						window.ind_comment = {
							review_id: undefined,
							comment: undefined,
							rating: undefined,
						};
					} else {
						var itemReviewEdit =
							document.querySelector("#edit_button");
						var itemReviewDelete =
							document.querySelector("#delete_button");

						if (ind_comment.review_id) {
							var itemReviewBox =
								document.querySelector("#item-review-box");
							itemReviewBox.innerHTML =
								'<p id="item-review-comment">' +
								ind_comment.comment +
								"</p>";

							let whiteStar = "<span>&#x2606;</span>";
							whiteStar = whiteStar.repeat(
								5 - ind_comment.rating
							);
							let blackStar = "<span>&#x2605;</span>";
							blackStar = blackStar.repeat(ind_comment.rating);

							var ratingBox =
								document.querySelector("#rating-box");
							ratingBox.innerHTML =
								'<div class="rating-stars" id="rating" name="rating">' +
								blackStar +
								whiteStar +
								"</div>";

							itemReviewEdit.innerHTML = "Edit";
							itemReviewDelete.innerHTML = "Delete";
						} else {
							var itemReviewBox =
								document.querySelector("#item-review-box");
							var ratingBox =
								document.querySelector("#rating-box");

							$("#edit_button").text("Submit");
							$("#delete_button").text("Cancel");
							const comment = "";
							itemReviewBox.innerHTML =
								'<input type="text" class="form-control text-left" ' +
								'id="item-review-input" name="item-review-input" value="' +
								comment +
								'"required />';
							ratingBox.innerHTML =
								'<select class="form-control text-left" id="rating" name="rating" required>\n' +
								'<option value="">Select a rating</option>\n' +
								'<option value="1">1</option>\n' +
								'<option value="2">2</option>\n' +
								'<option value="3">3</option>\n' +
								'<option value="4">4</option>\n' +
								'<option value="5">5</option>' +
								"</select>";
							window.ind_comment = {
								review_id: undefined,
								comment: undefined,
								rating: undefined,
							};
						}
					}
				});
			});
		</script>
	</body>
</html>
